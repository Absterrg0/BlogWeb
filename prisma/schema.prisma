// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User{
  id        Int       @id@default(autoincrement())
  name      String
  username  String    @unique
  password  String 
  email     String    @unique
  role      Role      @default(USER)
  blogs     Blog[]
  comments  Comment[]
  reactions Reaction[]
}


model Comment {
  id         Int        @id @default(autoincrement())
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  post       Blog       @relation(fields: [postId], references: [id])
  postId     Int
  parentId   Int?       // For threading comments
  parent     Comment?   @relation("ThreadedComments", fields: [parentId], references: [id])
  replies    Comment[]  @relation("ThreadedComments")
}

model Blog {
  id         Int        @id @default(autoincrement())
  title      String
  content    String
  createdAt  DateTime   @default(now())
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  comments   Comment[]  // Add this relation for comments
}



model Reaction{
  id        Int       @id@default(autoincrement())
  count     Int       @default(0)
  postId    Int
  authorId  Int
  author    User      @relation(fields: [authorId],references: [id])
}

enum Role{
  ADMIN
  USER
}